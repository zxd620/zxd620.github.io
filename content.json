{"meta":{"title":"赵晓东的网络日志","subtitle":"一个立志AI的嵌入式+硬件+后端+信号处理工程师","description":null,"author":"赵晓东","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"Secucrt，vim插件以及系统语言LANG 对printf的影响","slug":"Secucrt，vim插件以及系统语言LANG-对printf的影响","date":"2019-08-15T02:07:43.000Z","updated":"2019-08-15T13:45:36.375Z","comments":true,"path":"2019/08/15/Secucrt，vim插件以及系统语言LANG-对printf的影响/","link":"","permalink":"http://yoursite.com/2019/08/15/Secucrt，vim插件以及系统语言LANG-对printf的影响/","excerpt":"","text":"问题：安装vim插件vim设置： encoding=utf-8，内部机制，不要改变，在任何时候都不要试图修改encoding设置 termencoding=utf-8，vim输出到终端显示用，只涉及到显示，不涉及文件内容的改变 fileencodings=utf-8,ucs-bom,gbk,cp936,gb2312,gb18030，依次识别文件用 两个现象： 若服务器端系统LANG、secucrt按照GBK来设置，那么vim打开GB2313编码的文档无法正常显示，但gcc编译运行时，printf打印中文正常显示在终端secucrt； 解决方法：更改vim插件设置，~/.vimrc中termencoding=GBK 此时，gcc编译选择文件编码类型为GB2312或GBK的话，程序printf中文输出会乱码，应不指定（默认为utf-8），或者指定为utf-8则输出正确。这个现象，暂时无法解释。 若服务器端系统LANG、secucrt按照utf8来设置，那么vim打开GB2312编码的文档时可以正常显示中文（跟vim插件也有关，termencoding=utf-8），但是gcc后的程序，printf的中文结果乱码解决方案：gcc 编译时，加上对文档字符集的指定 -finput-charset=GB2312才能正常printf中文 解决方法：将main.c使用vscode转换为utf8，无论是否带bom，则不再需要指定-finput-charset就可正常printf中文；无论如何，掌握原则如下： 服务端系统语言设置为UTF-8，secucrt设置为utf-8，参考《远程SSH连接Linux中文乱码》的方案二； 代码以UTF-8格式创建和编写以及保存和gcc编译运行； 若代码文档格式为GBK或者GB2312等，则编译运行时应制定gcc的选项-finput-charset； 参考：vim插件https://github.com/ma6174/vim-deprecatedgcc编译选项https://blog.csdn.net/wangsen_sc/article/details/6915995http://blog.chinaunix.net/uid-28458801-id-4515769.htmlvim encoding fileencoding termencodinghttps://www.cnblogs.com/hopeworld/archive/2011/04/20/2022335.html 疑问1：-finput-charset 指定源文件的编码（若不指定，默认是UTF-8）-fexec-charset 指定多字节字符串(const char)常量在编译后的程序里保存的编码集（若不指定，默认是UTF-8）-fwide-exec-charset 指定宽字节字符串(const wchar_t)常量在编译后的程序里的保存的编码集 这几个编译选项的区别含义不是很明白； 疑问2：","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-08-14T12:32:56.377Z","updated":"2019-08-14T12:32:56.378Z","comments":true,"path":"2019/08/14/hello-world/","link":"","permalink":"http://yoursite.com/2019/08/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}